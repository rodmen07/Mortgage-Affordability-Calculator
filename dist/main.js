/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("// The following code will fade in the header element on start.\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const header = document.getElementsByTagName(\"header\");\n  header[0].classList.remove(\"hidden\");\n  header[0].classList.add(\"visible1\");\n});\n\n// The following code will fade in the main paragraph element on start with a delay.\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const paragraph = document.getElementById(\"main-paragraph\");\n  paragraph.classList.remove(\"hidden\");\n  paragraph.classList.add(\"visible2\");\n});\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const paragraph = document.getElementById(\"user-prompt1\");\n  paragraph.classList.remove(\"hidden\");\n  paragraph.classList.add(\"visible3\");\n});\n\n// The following code creates an event listener for enter to transition the form element onto the page.\nfunction handleEnterForm1(event) {\n  if (event.code === \"Enter\") {\n    const form = document.getElementsByTagName(\"form\");\n    form[0].classList.add(\"visible2\");\n    form[0].classList.remove(\"hidden\");\n  }\n}\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  document.addEventListener(\"keydown\", handleEnterForm1);\n});\n\n// The following code calculates the user's 20% and 40% DTI once the user submits the form data.\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"A proxy is used to bypass CORS restrictions. The proxy is https://cors-anywhere.herokuapp.com/\");\n  const submitBtn = document.getElementById(\"submit-btn\");\n  const dti20 = document.getElementById(\"user-20%-DTI\");\n  const dti40 = document.getElementById(\"user-40%-DTI\");\n  const apiKey = \"cc485c86412c9dee7cd0370084ce6c59\";\n  const seriesId = \"MORTGAGE30US\";\n  const apiUrl = `https://cors-anywhere.herokuapp.com/https://api.stlouisfed.org/fred/series/observations?series_id=${seriesId}&api_key=${apiKey}&file_type=json`;\n  const mainParagraph = document.getElementById(\"main-paragraph\");\n  const prompt1 = document.getElementById(\"user-prompt1\");\n  const prompt2 = document.getElementById(\"user-prompt2\");\n  const form = document.getElementsByTagName(\"form\");\n  const results = document.getElementById(\"results-paragraph\");\n  submitBtn.addEventListener(\"click\", event => {\n    event.preventDefault();\n    mainParagraph.classList.remove(\"visible2\");\n    mainParagraph.classList.add(\"hidden\");\n    prompt1.classList.add(\"hidden\");\n    prompt1.classList.remove(\"visible3\");\n    prompt2.classList.remove(\"hidden\");\n    prompt2.classList.add(\"visible1\");\n    form[0].classList.add(\"hidden\");\n    form[0].classList.remove(\"visible2\");\n    results.classList.remove(\"hidden\");\n    results.classList.add(\"visible1\");\n    dti20.classList.remove(\"hidden\");\n    dti20.classList.add(\"visible1\");\n    dti40.classList.remove(\"hidden\");\n    dti40.classList.add(\"visible1\");\n    document.removeEventListener(\"keydown\", handleEnterForm1);\n    // Save user input values to variables\n    const income = document.getElementById(\"income\").value;\n    const creditScore = document.querySelector('input[name=\"creditscore\"]:checked').value;\n    const debt = document.getElementById(\"debt\").value;\n    const downPayment = parseInt(document.getElementById(\"downpayment\").value);\n    function getMortgageRate() {\n      return fetch(apiUrl, {\n        mode: 'cors'\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        const latestValue = data.observations[0].value;\n        const resultElement = document.getElementById(\"mortgage-rate\");\n        resultElement.innerHTML = `The current average mortgage rate is ${latestValue}%`;\n        return latestValue;\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n    ;\n    getMortgageRate().then(mortgageRate => {\n      const monthlyIncome = income / 12;\n      const monthlyAmount20 = monthlyIncome * (0.2 - debt / monthlyIncome);\n      const yearlyAmount20 = monthlyAmount20 * 12;\n      const monthlyAmount40 = monthlyIncome * (0.4 - debt / monthlyIncome);\n      const yearlyAmount40 = monthlyAmount40 * 12;\n      let userMortgageRate = mortgageRate;\n      if (creditScore === \"excellent\") {\n        userMortgageRate = mortgageRate - 0.5;\n      } else if (creditScore === \"good\") {\n        userMortgageRate = mortgageRate - 0.25;\n      } else if (creditScore === \"average\") {\n        userMortgageRate = mortgageRate;\n      } else if (creditScore === \"poor\") {\n        userMortgageRate = mortgageRate + 0.25;\n      }\n      const dti20Result = Math.floor(yearlyAmount20 * 30 * (50 - userMortgageRate) / 100) + downPayment;\n      dti20.innerHTML = `The affordable mortgage amount at 20% DTI is <br> $${dti20Result}.00`;\n      const dti40Result = Math.floor(yearlyAmount40 * 30 * (50 - userMortgageRate) / 100) + downPayment;\n      dti40.innerHTML = `The affordable mortgage amount at 40% DTI is <br> $${dti40Result}.00`;\n\n      // The following code sends a request to the FRED API to find states with median home prices within the user's affordable mortgage range.\n      function getStatesInRange(minPrice, maxPrice) {\n        let seriesId = \"ATNHPIUSST\";\n        let apiKey = \"cc485c86412c9dee7cd0370084ce6c59\";\n        fetch(`https://cors-anywhere.herokuapp.com/https://api.stlouisfed.org/fred/series/observations?series_id=${seriesId}&api_key=${apiKey}&file_type=json`).then(response => response.json()).then(data => {\n          // Filter data to get states with a median home price within the given range\n          const filteredData = data.observations.filter(observation => {\n            const price = Number(observation.value);\n            return price >= minPrice && price <= maxPrice;\n          });\n\n          // Get unique list of states in filtered data\n          const states = [...new Set(filteredData.map(observation => observation.geo_name))];\n          console.log(states);\n        }).catch(error => console.error(error));\n      }\n      ;\n      document.addEventListener(\"keydown\", getStatesInRange(dti20Result, dti40Result));\n    }).catch(error => {\n      console.error(error);\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LTEtcHJvamVjdC8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;